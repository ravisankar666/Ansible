#functions --> taking input and providing the output, execute whenever we call
#function == filter .. we. can write functions but we need to write python code..
#we can use default in built function from ansible.

- name: functions
  hosts: local
  connection: local
  vars:
    technologies: devops,linx,shell,Ansible #string
    name: "lisa"
    gmail: Info@GMAIL.COM
    ip: "192.168.0.1"
    #dictioary
    tags:
     application: payment
     enviroment: dev
    #List 
    listtags:
    - key: application
      value: payment
    - key: enviroment
      value: dev   
  tasks:
  - name: default variable
    ansible.builtin.debug:
     msg: "hello, {{ name | default('roy') }}"   

  #string to list
  - name: convert string to list
    ansible.builtin.debug:
      msg: "Technology are : {{ technologies | split(',') }}"

  - name: convert map to list
    ansible.builtin.debug:    
     msg: "Tags are: {{ tags | dict2items }}"

  - name: convert list into map
    ansible.builtin.debug:
     msg: "tags map: {{ listtags | items2dict }}"   

  - name: read yaml and take into variable
    ansible.builtin.set_fact:      #yaml content store into student_data.yaml file.
      student_yaml: "{{ lookup('file', 'student.yaml') | from_yaml }}"
      
  - name: convert yaml into json
    ansible.builtin.debug:
      msg: "json :{{ student_yaml | to_json }}"    

  - name: save json to file
    ansible.builtin.copy:
      dest: ./student-data.json
      content:  "{{ student_yaml | to_nice_json }}"
    

  - name: convert uppercase
    ansible.builtin.debug:
      msg: "{{ name | upper}}"  


  - name: convert lowercase
    ansible.builtin.debug:
      msg: "{{ gmail | lower }}"    

  - name: check ip is vaild or not
    ansible.builtin.debug:
      msg: "{{ ip | ansible.utils.ipv4 }}"

  - name: grep for root
    ansible.builtin.shell: cat /etc/passwd | grep root   # if u wanna execute complex command go with shell module
    register: command_output

  - name: print the output
    ansible.builtin.debug:
      msg: "{{ command_output }}"  


  - name: redirect the output
    # ansible.builtin.command: ls -ltr > /tmp/output.txt
    ansible.builtin.shell: ls -ltr > /tmp/output.txt
    register: redirect_output

  - name: print redirect output
    ansible.builtin.debug:
      msg: "{{ redirect_output }}"  

     
     
     
     
     
     
     
     
     # in ansible facts === variables
     #shell_module --> can access variable, pipes,redirections,shell enviroment etc.
     # command_module--> a simple command no need of access to shell environment like variable , bash, piping etc